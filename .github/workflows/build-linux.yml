name: Build - linux
on: 
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  # env for linux-build image
  IMAGE_NAME: linux-build
  DOCKERFILE_PATH: docker/
  GITHUB_CONTAINER_REGISTRY: ghcr.io

jobs:
  build-linux-build-image:
    runs-on: ubuntu-latest
    outputs:
      linux-build-image: ${{ steps.set-image-tag.outputs.image }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - id: set-image-tag
      name: Set IMAGE_TAG env # env IMAGE_TAG=BranchName-CommitID-Timestamp
      run: |
        echo IMAGE_TAG=$(basename ${GITHUB_REF})-$(echo ${GITHUB_SHA} | cut -c 1-7)-$(date -u +"%Y%m%d") >> ${GITHUB_ENV}
        echo "::set-output name=image::${GITHUB_CONTAINER_REGISTRY}/${GITHUB_REPOSITORY}/${env.IMAGE_NAME}:${IMAGE_TAG}"
    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - name: Build & Publish to Github Container Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ github.repository }}/${{ env.IMAGE_NAME }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ env.GITHUB_CONTAINER_REGISTRY }}
        snapshot: false
        workdir: ${{ env.DOCKERFILE_PATH }}
        tags: "latest,${{ env.IMAGE_TAG }}"
        buildargs: "IMAGE_TAG=${{ env.IMAGE_TAG }}"

  build-ffmpeg:
    runs-on: ubuntu-latest
    needs:
      build-linux-build-image
    container:
      image: ${{needs.build-linux-build-image.outputs.linux-build-image}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'true'

      - name: Build
        run: |
          cd ffmpeg
          mkdir -p build
          ./configure --prefix=$(pwd)/build --enable-shared --enable-sdl2 --enable-gpl --enable-nonfree --enable-libx264 --enable-libx265 --enable-libaom --enable-libsvtav1 --enable-libfdk-aac --enable-libopus --enable-libsrt
          make -rj
          make install

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-build
          path: ffmpeg/build/
