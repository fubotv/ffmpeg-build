name: Build
on: 
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main


jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          # - { sys: ucrt64,  env: ucrt-x86_64 }  # Experimental!
          # - { sys: clang64, env: clang-x86_64 } # Experimental!
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: >-
            git make pkgconf diffutils zip tree 
            mingw-w64-${{matrix.env}}-nasm mingw-w64-${{matrix.env}}-gcc mingw-w64-${{matrix.env}}-SDL2
            mingw-w64-${{matrix.env}}-fdk-aac mingw-w64-${{matrix.env}}-opus 
            mingw-w64-${{matrix.env}}-x264 mingw-w64-${{matrix.env}}-x265 
            mingw-w64-${{matrix.env}}-svt-av1 mingw-w64-${{matrix.env}}-aom 
            mingw-w64-${{matrix.env}}-srt

      - name: Build
        run: |
          cd ffmpeg
          mkdir -p build
          ./configure --prefix=$(pwd)/build --enable-shared --enable-sdl2 --enable-gpl --enable-nonfree --enable-libx264 --enable-libx265 --enable-libaom --enable-libsvtav1 --enable-libfdk-aac --enable-libopus --enable-libsrt
          make -rj
          make install

      # also need to package DLL dependencies
      - name: Package
        run: |
          cd ffmpeg
          cd build/bin && ldd ffmpeg | grep ${{matrix.sys}} | awk '{system("cp "$3" ./")}' && cd ../..
          cd build/bin && ldd ffmpeg | grep libcrypto
          cd build/bin && ldd ffmpeg | grep libcrypto | awk '{system("cp "$3" ./")}' && cd ../..
          tree build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-build
          path: ffmpeg/build/
